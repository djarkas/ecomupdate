{"ast":null,"code":"var _jsxFileName = \"/Users/dinajarkas/ecomguidedireact/src/pages/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const initialValues = {\n    name: \"\",\n    email: \"\"\n  }; // const [formValues, setFormValues] = useState(initialValues);\n\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  const handleChange = e => {\n    // console.log(e.target);\n    const {\n      name,\n      value\n    } = e.target; // setFormValues({...formValues, [name]: value });\n    // console.log(formValues);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // setFormErrors(validate(formValues));\n\n    setIsSubmit(true);\n  };\n\n  useEffect(() => {\n    console.log(formErrors);\n\n    if (Object.keys(formErrors).length === 0 && isSubmit) {\n      console.log(formValues);\n    }\n  }, [formErrors]);\n\n  const validate = values => {\n    const errors = {};\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n    if (!values.name) {\n      errors.name = \"Name is required!\";\n    }\n\n    if (!values.email) {\n      errors.email = \"Email is required!\";\n    } else if (!regex.test(values.email)) {\n      errors.email = \"This is not a valid email format!\";\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"con\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Write Us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), Object.keys(formErrors).length === 0 && isSubmit ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui message success\",\n          children: \"Sent!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 10\n        }, this) : /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: [\" \", JSON.stringify(formValues, undefined, 2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            placeholder: \" Your Name\",\n            value: formValues.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formErrors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            placeholder: \"Email\",\n            value: formValues.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formErrors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"message\",\n            id: \"message\",\n            cols: \"30\",\n            rows: \"10\",\n            placeholder: \"Leave us a comment here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            ClassName: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n\n_s(Contact, \"Zf52P+/T5xeeBmQCKyjRuQBEc9s=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/dinajarkas/ecomguidedireact/src/pages/Contact.js"],"names":["React","useState","useEffect","Contact","initialValues","name","email","formErrors","setFormErrors","isSubmit","setIsSubmit","handleChange","e","value","target","handleSubmit","preventDefault","console","log","Object","keys","length","formValues","validate","values","errors","regex","test","JSON","stringify","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAMC,aAAa,GAAG;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAAtB,CADkB,CAEpB;;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AAC1B;AACA,UAAK;AAACP,MAAAA,IAAD;AAAOQ,MAAAA;AAAP,QAAgBD,CAAC,CAACE,MAAvB,CAF0B,CAG3B;AACC;AACD,GALD;;AAOA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF,GAD0B,CAE1B;;AACAN,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAJD;;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAYX,UAAZ;;AACA,QAAGY,MAAM,CAACC,IAAP,CAAYb,UAAZ,EAAwBc,MAAxB,KAAmC,CAAnC,IAAwCZ,QAA3C,EAAqD;AAClDQ,MAAAA,OAAO,CAACC,GAAR,CAAYI,UAAZ;AACF;AACF,GALQ,EAKP,CAACf,UAAD,CALO,CAAT;;AAOF,QAAMgB,QAAQ,GAAIC,MAAD,IAAY;AAC3B,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMC,KAAK,GAAG,gCAAd;;AACA,QAAI,CAACF,MAAM,CAACnB,IAAZ,EAAiB;AACfoB,MAAAA,MAAM,CAACpB,IAAP,GAAc,mBAAd;AACD;;AACD,QAAI,CAACmB,MAAM,CAAClB,KAAZ,EAAkB;AAChBmB,MAAAA,MAAM,CAACnB,KAAP,GAAe,oBAAf;AACD,KAFD,MAEO,IAAI,CAACoB,KAAK,CAACC,IAAN,CAAWH,MAAM,CAAClB,KAAlB,CAAL,EAA8B;AACnCmB,MAAAA,MAAM,CAACnB,KAAP,GAAe,mCAAf;AACD;;AACD,WAAOmB,MAAP;AACD,GAZD;;AAcA,sBACG;AAAA,2BAEH;AAAA,8BAEI;AAAA,+BACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMQ;AAAK,QAAA,KAAK,EAAC,KAAX;AAAA,gCAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,EAGCN,MAAM,CAACC,IAAP,CAAYb,UAAZ,EAAwBc,MAAxB,KAAmC,CAAnC,IAAwCZ,QAAxC,gBACA;AAAK,UAAA,SAAS,EAAG,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,gBAGD;AAAA,0BAAOmB,IAAI,CAACC,SAAL,CAAeP,UAAf,EAA2BQ,SAA3B,EAAsC,CAAtC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA,gBANA,eAQA;AAAM,UAAA,QAAQ,EAAIf,YAAlB;AAAA,kCACE;AACC,YAAA,IAAI,EAAC,MADN;AAEC,YAAA,IAAI,EAAC,MAFN;AAGC,YAAA,EAAE,EAAC,MAHJ;AAIE,YAAA,WAAW,EAAC,YAJd;AAKE,YAAA,KAAK,EAAIO,UAAU,CAACjB,IALtB;AAME,YAAA,QAAQ,EAAIM;AANd;AAAA;AAAA;AAAA;AAAA,kBADF,eASI;AAAA,sBAAIJ,UAAU,CAACF;AAAf;AAAA;AAAA;AAAA;AAAA,kBATJ,eAWI;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,IAAI,EAAC,OAAzB;AAAiC,YAAA,EAAE,EAAC,OAApC;AAA4C,YAAA,WAAW,EAAC,OAAxD;AAAgE,YAAA,KAAK,EAAIiB,UAAU,CAAChB,KAApF;AAA2F,YAAA,QAAQ,EAAIK;AAAvG;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAYI;AAAA,sBAAIJ,UAAU,CAACD;AAAf;AAAA;AAAA;AAAA;AAAA,kBAZJ,eAcI;AAAU,YAAA,IAAI,EAAC,SAAf;AAAyB,YAAA,EAAE,EAAC,SAA5B;AAAsC,YAAA,IAAI,EAAC,IAA3C;AAAgD,YAAA,IAAI,EAAC,IAArD;AAA0D,YAAA,WAAW,EAAC;AAAtE;AAAA;AAAA;AAAA;AAAA,kBAdJ,eAeI;AAAQ,YAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBARA;AAAA;AAAA;AAAA;AAAA;AAAA,cANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAFG,mBADH;AAyCC,CAjFD;;GAAMH,O;;KAAAA,O;AAmFN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from \"react\";\n\n\nconst Contact = () => {\n    const initialValues = { name: \"\", email: \"\" };\n  // const [formValues, setFormValues] = useState(initialValues);\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  const handleChange = (e) => {\n    // console.log(e.target);\n    const{name, value} = e.target;\n   // setFormValues({...formValues, [name]: value });\n    // console.log(formValues);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // setFormErrors(validate(formValues));\n    setIsSubmit(true);\n  };\n\n  useEffect(() => {\n    console.log(formErrors);\n    if(Object.keys(formErrors).length === 0 && isSubmit) {\n       console.log(formValues);\n    }\n  },[formErrors]);\n\nconst validate = (values) => {\n  const errors = {}\n  const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n  if (!values.name){\n    errors.name = \"Name is required!\";\n  }\n  if (!values.email){\n    errors.email = \"Email is required!\";\n  } else if (!regex.test(values.email)){\n    errors.email = \"This is not a valid email format!\";\n  }\n  return errors;\n};\n\nreturn(\n   <>\n\n<body>\n    \n    <header>\n  <h1>Contact</h1>\n      </header>\n  \n        <div class=\"con\">\n        \n        <h2>Write Us</h2>\n        {Object.keys(formErrors).length === 0 && isSubmit ? \n        (<div className = \"ui message success\">Sent!</div>\n        ) : ( \n        <pre> {JSON.stringify(formValues, undefined, 2)}</pre>\n        )}\n        <form onSubmit = {handleSubmit}>\n          <input\n           type=\"text\" \n           name=\"name\" \n           id=\"name\"\n            placeholder=\" Your Name\" \n            value = {formValues.name} \n            onChange = {handleChange}\n            />\n            <p>{formErrors.name}</p>\n            \n            <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" value = {formValues.email} onChange = {handleChange} />\n            <p>{formErrors.email}</p>\n\n            <textarea name=\"message\" id=\"message\" cols=\"30\" rows=\"10\" placeholder=\"Leave us a comment here\"></textarea>\n            <button ClassName=\"submit\">Send</button>\n        </form>\n    </div>\n  \n  \n    </body>\n\n</>\n)\n}\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}